; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:TX_Frsky_R9M_2018_via_STLINK]
platform = ststm32@6.1.0
framework = arduino
board = bluepill_f103c8
build_unflags = -Os
build_flags =
	-D TARGET_R9M_TX
	-D PLATFORM_STM32
	-D HSE_VALUE=12000000U
	-O2
	-DVECT_TAB_OFFSET=0x2000U
	-Wl,-Tvariants/R9M_ldscript.ld
src_filter = ${common_env_data.src_filter} -<ESP32*.*> -<ESP8266*.*> -<WS281B*.*> -<rx_*.cpp>
extra_scripts =
	${common_env_data.extra_scripts}
	python/opentx.py
upload_protocol = custom
upload_flags =
	BOOTLOADER=bootloader/r9m_bootloader.bin
	VECT_OFFSET=0x2000
board_build.flash_offset = 0x2000
lib_deps = 
	https://github.com/PaoloP74/extEEPROM.git

[env:TX_Frsky_R9M_2018_via_WiFi]
platform = ststm32@6.0.0
framework = arduino
board = bluepill_f103c8
build_unflags = -Os
build_flags =
	-D TARGET_R9M_TX
	-D PLATFORM_STM32
	-D HSE_VALUE=12000000U
	-O2
extra_scripts = 
	${common_env_data.extra_scripts}
	python/upload_via_esp8266_backpack.py
src_filter = ${common_env_data.src_filter} -<ESP32*.*> -<ESP8266*.*> -<WS281B*.*> -<rx_*.cpp>
upload_protocol = custom
lib_deps =
    https://github.com/PaoloP74/extEEPROM.git

[env:TX_Frsky_R9M_2018_LITE_via_STLINK]
platform = ststm32@6.1.0
framework = arduino
board = bluepill_f103c8
build_unflags = -Os
build_flags =
	-D TARGET_R9M_LITE_TX
	-D PLATFORM_STM32
	-D HSE_VALUE=12000000U
	-O2
	-DVECT_TAB_OFFSET=0x2000U
	-Wl,-Tvariants/R9M_ldscript.ld
src_filter = ${common_env_data.src_filter} -<ESP32*.*> -<ESP8266*.*> -<WS281B*.*> -<rx_*.cpp>
extra_scripts =
	${common_env_data.extra_scripts}
	python/opentx.py
upload_protocol = custom
upload_flags =
	BOOTLOADER=bootloader/r9m_bootloader.bin
	VECT_OFFSET=0x2000
board_build.flash_offset = 0x2000
lib_deps = 
	https://github.com/PaoloP74/extEEPROM.git	

[env:TX_ESP32_1000mw]
platform = espressif32@1.12.0
board = esp32dev
framework = arduino
upload_speed = 921600
upload_resetmethod = nodemcu
monitor_speed = 115200
monitor_dtr = 0
monitor_rts = 0
build_flags =
	-D TARGET_EXPRESSLRS_PCB_TX_V3
	-D TARGET_1000mW_MODULE
	-D PLATFORM_ESP32
src_filter = ${common_env_data.src_filter} -<ESP8266*.*> -<STM32*.*> -<rx_main.cpp> -<rx_*.cpp>
extra_scripts = ${common_env_data.extra_scripts}
lib_deps = NeoPixelBus

[env:TX_ESP32_100mw]
platform = espressif32@1.12.0
board = esp32dev
framework = arduino
upload_speed = 921600
upload_resetmethod = nodemcu
monitor_speed = 115200
monitor_dtr = 0
monitor_rts = 0
build_flags =
	-D TARGET_EXPRESSLRS_PCB_TX_V3
	-D TARGET_100mW_MODULE
	-D PLATFORM_ESP32
src_filter = ${common_env_data.src_filter} -<ESP8266*.*> -<STM32*.*> -<rx_main.cpp> -<rx_*.cpp>
extra_scripts = ${common_env_data.extra_scripts}
lib_deps = NeoPixelBus

[env:TX_TTGO_LORA_V1]
platform = espressif32@1.12.0
board = esp32dev
framework = arduino
upload_speed = 921600
upload_resetmethod = nodemcu
monitor_speed = 115200
monitor_dtr = 0
monitor_rts = 0
build_flags =
	-D TARGET_TTGO_LORA_V1_AS_TX
	-D TARGET_100mW_MODULE
	-D PLATFORM_ESP32
src_filter = ${common_env_data.src_filter} -<ESP8266*.*> -<STM32*.*> -<rx_main.cpp> -<rx_*.cpp>
extra_scripts = ${common_env_data.extra_scripts}
lib_deps = NeoPixelBus

[env:TX_TTGO_LORA_V2]
platform = espressif32@1.12.0
board = esp32dev
framework = arduino
upload_speed = 921600
upload_resetmethod = nodemcu
monitor_speed = 115200
monitor_dtr = 0
monitor_rts = 0
build_flags =
	-D TARGET_TTGO_LORA_V2_AS_TX
	-D TARGET_100mW_MODULE
	-D PLATFORM_ESP32
src_filter = ${common_env_data.src_filter} -<ESP8266*.*> -<STM32*.*> -<rx_*.cpp>
extra_scripts = ${common_env_data.extra_scripts}
lib_deps = NeoPixelBus

[env:RX_ESP8285_via_UART]
platform = espressif8266@2.2.3
platform_packages = toolchain-xtensa@2.40802.200502
board = esp8285
framework = arduino
upload_speed = 921600
monitor_speed = 420000
monitor_dtr = 0
monitor_rts = 0
build_flags =
	-D TARGET_EXPRESSLRS_PCB_RX_V3
	-D TARGET_100mW_MODULE
	-D PLATFORM_ESP8266
	-DVTABLES_IN_FLASH
	-O2
board_build.f_cpu = 80000000L
src_filter = ${common_env_data.src_filter} -<ESP32*.*> -<STM32*.*> -<tx_*.cpp> -<WS281B*.*>
extra_scripts = ${common_env_data.extra_scripts}

[env:RX_ESP8285_via_BetaflightPassthrough]
platform = ${env:RX_ESP8285_via_UART.platform}
platform_packages = toolchain-xtensa@2.40802.200502
board = esp8285
framework = arduino
monitor_dtr = 0
monitor_rts = 0
build_flags = ${env:RX_ESP8285_via_UART.build_flags}
src_filter = ${env:RX_ESP8285_via_UART.src_filter}
extra_scripts = ${common_env_data.extra_scripts}
upload_speed = 74880
upload_protocol = custom
upload_command =
	python python/runpython.py $PYTHONEXE python/BFinitPassthrough.py 74880
	python $PROJECT_PACKAGES_DIR/framework-arduinoespressif32/tools/esptool.py --no-stub -b 74880 -c esp8266 --before no_reset --after soft_reset write_flash 0x0000 $SOURCE

[env:RX_Frsky_R9MM_R9MINI_via_STLINK]
platform = ststm32@6.1.0
framework = arduino
board = R9MM
build_unflags = -Os
build_flags =
	-D TARGET_R9M_RX
	-D TARGET_100mW_MODULE
	-D PLATFORM_STM32
	-D HSE_VALUE=24000000U
	-O2
	-DVECT_TAB_OFFSET=0x08008000U
	-Wl,-Tvariants/R9MM/R9MM_ldscript.ld
src_filter = ${common_env_data.src_filter} -<ESP32*.*> -<ESP8266*.*> -<WS281B*.*> -<tx_*.cpp>
upload_protocol = custom
extra_scripts =
	${common_env_data.extra_scripts}
	python/upload_stlink.py
upload_flags =
    BOOTLOADER=bootloader/Bootloader.hex
    VECT_OFFSET=0x8000
lib_deps =
    https://github.com/PaoloP74/extEEPROM.git
	Wire

[env:RX_Frsky_R9MM_R9MINI_via_BetaflightPassthrough]
platform = ${env:RX_Frsky_R9MM_R9MINI_via_STLINK.platform}
framework = ${env:RX_Frsky_R9MM_R9MINI_via_STLINK.framework}
board = ${env:RX_Frsky_R9MM_R9MINI_via_STLINK.board}
build_unflags = ${env:RX_Frsky_R9MM_R9MINI_via_STLINK.build_unflags}
build_flags = ${env:RX_Frsky_R9MM_R9MINI_via_STLINK.build_flags}
src_filter = ${env:RX_Frsky_R9MM_R9MINI_via_STLINK.src_filter}
extra_scripts = ${common_env_data.extra_scripts}
upload_protocol = custom
upload_command =
	python python/runpython.py $PYTHONEXE python/BFinitPassthrough.py 420000
	python python/runpython.py $PYTHONEXE python/UARTupload.py $SOURCE
lib_deps = ${env:RX_Frsky_R9MM_R9MINI_via_STLINK.lib_deps}

[env:RX_SX1280_ESP8285_via_UART]
platform = espressif8266@2.2.3
platform_packages = toolchain-xtensa@2.40802.200502
board = esp8285
framework = arduino
upload_speed = 921600
monitor_speed = 420000
monitor_dtr = 0
monitor_rts = 0
build_flags = 	
	-D TARGET_RX_ESP8266_SX1280_V1
	-D TARGET_100mW_MODULE
	-D TARGET_SX1280
	-D PLATFORM_ESP8266
	-D VTABLES_IN_FLASH
	-O2
board_build.f_cpu = 80000000L
src_filter = ${common_env_data.src_filter} -<ESP32*.*> -<STM32*.*> -<tx_*.cpp> -<WS281B*.*> -<tx_*.cpp>
extra_scripts = ${common_env_data.extra_scripts}

[env:RX_SX1280_ESP8285_via_BetaflightPassthrough]
platform = ${env:RX_SX1280_ESP8285_via_UART.platform}
platform_packages = ${env:RX_SX1280_ESP8285_via_UART.platform_packages}
board = ${env:RX_SX1280_ESP8285_via_UART.board}
framework = ${env:RX_SX1280_ESP8285_via_UART.framework}
upload_speed = 74880
monitor_speed = 420000
monitor_dtr = 0
monitor_rts = 0
build_flags = ${env:RX_SX1280_ESP8285_via_UART.build_flags}
board_build.f_cpu = ${env:RX_SX1280_ESP8285_via_UART.board_build.f_cpu}
src_filter = ${env:RX_SX1280_ESP8285_via_UART.src_filter}
extra_scripts = ${common_env_data.extra_scripts}
upload_protocol = custom
upload_command =
	python python/runpython.py $PYTHONEXE python/BFinitPassthrough.py 74880
	python $PROJECT_PACKAGES_DIR/framework-arduinoespressif32/tools/esptool.py --no-stub -b 74880 -c esp8266 --before no_reset --after soft_reset write_flash 0x0000 $SOURCE

[env:TX_SX1280_ESP32_via_UART]
platform = espressif32@1.12.0
board = esp32dev
framework = arduino
upload_speed = 921600
upload_resetmethod = nodemcu
monitor_speed = 115200
monitor_dtr = 0
monitor_rts = 0
board_build.f_cpu = 160000000L
build_flags =
	-D TARGET_TX_ESP32_SX1280_V1
	-D TARGET_100mW_MODULE
	-D TARGET_SX1280
	-D PLATFORM_ESP32
	-D VTABLES_IN_FLASH
	-O2
src_filter = ${common_env_data.src_filter} -<ESP8266*.*> -<STM32*.*> -<rx_main.cpp> -<rx_*.cpp>
extra_scripts = ${common_env_data.extra_scripts}
lib_deps = NeoPixelBus

[env:TX_E28_ESP32_via_UART]
platform = espressif32@1.12.0
board = esp32dev
framework = arduino
upload_speed = 921600
upload_resetmethod = nodemcu
monitor_speed = 115200
monitor_dtr = 0
monitor_rts = 0
board_build.f_cpu = 160000000L
build_flags =
	-D TARGET_TX_ESP32_E28_SX1280_V1
	-D TARGET_100mW_MODULE
	-D TARGET_SX1280
	-D PLATFORM_ESP32
	-D VTABLES_IN_FLASH
	-O2
src_filter = ${common_env_data.src_filter} -<ESP8266*.*> -<STM32*.*> -<rx_main.cpp> -<rx_*.cpp>
extra_scripts = ${common_env_data.extra_scripts}
lib_deps = NeoPixelBus

[env:TX_LORA1280F27_ESP32_via_UART]
platform = espressif32@1.12.0
board = esp32dev
framework = arduino
upload_speed = 921600
upload_resetmethod = nodemcu
monitor_speed = 115200
monitor_dtr = 0
monitor_rts = 0
board_build.f_cpu = 160000000L
build_flags =
	-D TARGET_TX_ESP32_LORA1280F27
	-D TARGET_SX1280
	-D PLATFORM_ESP32
	-D VTABLES_IN_FLASH
	-O2
src_filter = ${common_env_data.src_filter} -<ESP8266*.*> -<STM32*.*> -<rx_main.cpp> -<rx_*.cpp>
extra_scripts = ${common_env_data.extra_scripts}
lib_deps = NeoPixelBus

[common_env_data]
src_filter = +<*> -<.git/> -<svn/> -<example/> -<examples/> -<test/> -<tests/> -<*.py> -<*test*.*>
extra_scripts = pre:python/build_flags.py
